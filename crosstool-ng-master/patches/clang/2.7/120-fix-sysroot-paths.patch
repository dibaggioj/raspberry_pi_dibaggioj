diff -urN a/include/clang/Driver/Driver.h b/include/clang/Driver/Driver.h
--- a/include/clang/Driver/Driver.h	2010-02-25 04:31:53.000000000 +0100
+++ b/include/clang/Driver/Driver.h	2013-08-01 17:49:00.401854708 +0200
@@ -64,6 +64,8 @@
   /// The path to the compiler resource directory.
   std::string ResourceDir;
 
+  std::string SysrootDir;
+
   /// Default host triple.
   std::string DefaultHostTriple;
 
diff -urN a/lib/Driver/Driver.cpp b/lib/Driver/Driver.cpp
--- a/lib/Driver/Driver.cpp	2010-03-04 22:07:38.000000000 +0100
+++ b/lib/Driver/Driver.cpp	2013-08-01 17:48:38.494321918 +0200
@@ -174,6 +174,20 @@
     Dir = A->getValue(*Args);
 
   Host = GetHostInfo(HostTriple);
+  
+  if (const Arg *A = Args->getLastArg(options::OPT__sysroot_EQ)) {
+    SysrootDir = A->getValue(*Args);
+  } else if (const Arg *A = Args->getLastArg(options::OPT_isysroot)) {
+    SysrootDir = A->getValue(*Args);
+  } else {
+      llvm::sys::Path P(Dir);
+      if (!P.isEmpty()) {
+        P.eraseComponent(); // Remove /bin from foo/bin
+        P.appendComponent(Host->getTriple().getTriple());
+        P.appendComponent("sysroot");
+        SysrootDir = P.str();
+      }
+  }
 
   // The compilation takes ownership of Args.
   Compilation *C = new Compilation(*this, *Host->CreateToolChain(*Args), Args);
diff -urN a/lib/Driver/ToolChains.cpp b/lib/Driver/ToolChains.cpp
--- a/lib/Driver/ToolChains.cpp	2010-03-04 22:07:38.000000000 +0100
+++ b/lib/Driver/ToolChains.cpp	2013-08-01 17:48:25.734595944 +0200
@@ -217,21 +217,22 @@
 
 void DarwinGCC::AddLinkSearchPathArgs(const ArgList &Args,
                                       ArgStringList &CmdArgs) const {
+  std::string sysroot = getDriver().SysrootDir;
   // FIXME: Derive these correctly.
   if (getArchName() == "x86_64") {
-    CmdArgs.push_back(Args.MakeArgString("-L/usr/lib/gcc/" + ToolChainDir +
+    CmdArgs.push_back(Args.MakeArgString("-L"+sysroot+"/usr/lib/gcc/" + ToolChainDir +
                                          "/x86_64"));
     // Intentionally duplicated for (temporary) gcc bug compatibility.
-    CmdArgs.push_back(Args.MakeArgString("-L/usr/lib/gcc/" + ToolChainDir +
+    CmdArgs.push_back(Args.MakeArgString("-L"+sysroot+"/usr/lib/gcc/" + ToolChainDir +
                                          "/x86_64"));
   }
-  CmdArgs.push_back(Args.MakeArgString("-L/usr/lib/" + ToolChainDir));
-  CmdArgs.push_back(Args.MakeArgString("-L/usr/lib/gcc/" + ToolChainDir));
+  CmdArgs.push_back(Args.MakeArgString("-L"+sysroot+"/usr/lib/" + ToolChainDir));
+  CmdArgs.push_back(Args.MakeArgString("-L"+sysroot+"/usr/lib/gcc/" + ToolChainDir));
   // Intentionally duplicated for (temporary) gcc bug compatibility.
-  CmdArgs.push_back(Args.MakeArgString("-L/usr/lib/gcc/" + ToolChainDir));
-  CmdArgs.push_back(Args.MakeArgString("-L/usr/lib/gcc/" + ToolChainDir +
+  CmdArgs.push_back(Args.MakeArgString("-L"+sysroot+"/usr/lib/gcc/" + ToolChainDir));
+  CmdArgs.push_back(Args.MakeArgString("-L"+sysroot+"/usr/lib/gcc/" + ToolChainDir +
                                        "/../../../" + ToolChainDir));
-  CmdArgs.push_back(Args.MakeArgString("-L/usr/lib/gcc/" + ToolChainDir +
+  CmdArgs.push_back(Args.MakeArgString("-L"+sysroot+"/usr/lib/gcc/" + ToolChainDir +
                                        "/../../.."));
 }
 
diff -urN a/lib/Driver/Tools.cpp b/lib/Driver/Tools.cpp
--- a/lib/Driver/Tools.cpp	2010-03-07 05:46:18.000000000 +0100
+++ b/lib/Driver/Tools.cpp	2013-08-01 17:50:14.940294976 +0200
@@ -701,6 +701,12 @@
   std::string TripleStr = getEffectiveClangTriple(D, getToolChain(), Args);
   CmdArgs.push_back(Args.MakeArgString(TripleStr));
 
+  // Set sysroot
+  if(!D.SysrootDir.empty()) {
+    CmdArgs.push_back("-isysroot");
+    CmdArgs.push_back(Args.MakeArgString(D.SysrootDir));
+  }
+
   // Select the appropriate action.
   if (isa<AnalyzeJobAction>(JA)) {
     assert(JA.getType() == types::TY_Plist && "Invalid output type.");
@@ -2091,11 +2097,9 @@
   Args.AddAllArgs(CmdArgs, options::OPT_sub__umbrella);
 
   Args.AddAllArgsTranslated(CmdArgs, options::OPT_isysroot, "-syslibroot");
-  if (getDarwinToolChain().isTargetIPhoneOS()) {
-    if (!Args.hasArg(options::OPT_isysroot)) {
-      CmdArgs.push_back("-syslibroot");
-      CmdArgs.push_back("/Developer/SDKs/Extra");
-    }
+  if (!D.SysrootDir.empty()) {
+    CmdArgs.push_back("-syslibroot");
+    CmdArgs.push_back(Args.MakeArgString(D.SysrootDir));
   }
 
   Args.AddLastArg(CmdArgs, options::OPT_twolevel__namespace);
