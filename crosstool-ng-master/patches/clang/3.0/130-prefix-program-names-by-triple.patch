diff -urN a/include/clang/Driver/Driver.h b/include/clang/Driver/Driver.h
--- a/include/clang/Driver/Driver.h	2013-10-28 19:11:15.490262646 +0000
+++ b/include/clang/Driver/Driver.h	2013-10-28 19:11:15.700265879 +0000
@@ -64,6 +64,9 @@
   /// command line.
   std::string Dir;
 
+  /// The prefix of the clang executable.
+  std::string Prefix;
+
   /// The original path to the clang executable.
   std::string ClangExecutable;
 
diff -urN a/lib/Driver/ToolChain.cpp b/lib/Driver/ToolChain.cpp
--- a/lib/Driver/ToolChain.cpp	2013-10-28 19:11:15.496929425 +0000
+++ b/lib/Driver/ToolChain.cpp	2013-10-28 19:11:15.700265879 +0000
@@ -38,6 +38,17 @@
 }
 
 std::string ToolChain::GetProgramPath(const char *Name, bool WantFile) const {
+  // Don't try to prefix clang
+  if(strcmp(Name, "clang")) {
+    // Try first with prefixed by triple
+    std::string targetName = Host.getDriver().Prefix;
+    targetName += "-";
+    targetName += Name;
+    std::string targetProgram = Host.getDriver().GetProgramPath(targetName.c_str(), *this, WantFile);
+    if(targetProgram != targetName) {
+      return targetProgram;
+    }
+  }
   return Host.getDriver().GetProgramPath(Name, *this, WantFile);
 }
 
diff -urN a/tools/driver/driver.cpp b/tools/driver/driver.cpp
--- a/tools/driver/driver.cpp	2013-10-28 19:11:15.573597275 +0000
+++ b/tools/driver/driver.cpp	2013-10-28 19:11:15.703599269 +0000
@@ -272,7 +272,7 @@
   // the function tries to identify a target as prefix. E.g.
   // "x86_64-linux-clang" as interpreted as suffix "clang" with
   // target prefix "x86_64-linux". If such a target prefix is found,
-  // is gets added via -ccc-host-triple as implicit first argument.
+  // it gets added via -ccc-host-triple as implicit first argument.
   static const struct {
     const char *Suffix;
     bool IsCXX;
@@ -322,9 +322,17 @@
     ProgNameRef = ProgNameRef.slice(0, LastComponent);
   }
 
+  TheDriver.Prefix = Prefix;
+
   if (Prefix.empty())
     return;
 
+  // Force i<N>86*darwin* to i386*darwin* (see above for reason)
+  if (ProgName.find("darwin") != std::string::npos &&
+      ProgName[0] == 'i' && isdigit(ProgName[1]) &&
+      ProgName[2] == '8' && ProgName[3] == '6')
+    ProgName[1] = '3';
+
   std::string IgnoredError;
   if (llvm::TargetRegistry::lookupTarget(Prefix, IgnoredError)) {
     SmallVectorImpl<const char *>::iterator it = ArgVector.begin();
