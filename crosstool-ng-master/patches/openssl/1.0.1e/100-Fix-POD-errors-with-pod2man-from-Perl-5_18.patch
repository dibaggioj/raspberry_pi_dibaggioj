diff -urN a/doc/apps/cms.pod b/doc/apps/cms.pod
--- a/doc/apps/cms.pod	2013-02-11 15:26:04.000000000 +0000
+++ b/doc/apps/cms.pod	2013-06-22 22:33:58.324550366 +0100
@@ -450,28 +450,28 @@
 
 =over 4
 
-=item 0
+=item Z<>0
 
 the operation was completely successfully.
 
-=item 1 
+=item Z<>1
 
 an error occurred parsing the command options.
 
-=item 2
+=item Z<>2
 
 one of the input files could not be read.
 
-=item 3
+=item Z<>3
 
 an error occurred creating the CMS file or when reading the MIME
 message.
 
-=item 4
+=item Z<>4
 
 an error occurred decrypting or verifying the message.
 
-=item 5
+=item Z<>5
 
 the message was verified correctly but an error occurred writing out
 the signers certificates.
diff -urN a/doc/apps/smime.pod b/doc/apps/smime.pod
--- a/doc/apps/smime.pod	2013-02-11 15:26:04.000000000 +0000
+++ b/doc/apps/smime.pod	2013-06-22 22:33:58.324550366 +0100
@@ -308,28 +308,28 @@
 
 =over 4
 
-=item 0
+=item Z<>0
 
 the operation was completely successfully.
 
-=item 1 
+=item Z<>1 
 
 an error occurred parsing the command options.
 
-=item 2
+=item Z<>2
 
 one of the input files could not be read.
 
-=item 3
+=item Z<>3
 
 an error occurred creating the PKCS#7 file or when reading the MIME
 message.
 
-=item 4
+=item Z<>4
 
 an error occurred decrypting or verifying the message.
 
-=item 5
+=item Z<>5
 
 the message was verified correctly but an error occurred writing out
 the signers certificates.
diff -urN a/doc/crypto/OPENSSL_ia32cap.pod b/doc/crypto/OPENSSL_ia32cap.pod
--- a/doc/crypto/OPENSSL_ia32cap.pod	2013-02-11 15:02:48.000000000 +0000
+++ b/doc/crypto/OPENSSL_ia32cap.pod	2013-06-22 23:50:28.674383073 +0100
@@ -20,6 +20,8 @@
 crypto library behaviour. For the moment of this writing six bits are
 significant, namely:
 
+=over 4
+
 1. bit #28 denoting Hyperthreading, which is used to distiguish
    cores with shared cache;
 2. bit #26 denoting SSE2 support;
@@ -29,6 +31,8 @@
    pathes;
 6. bit #4 denoting presence of Time-Stamp Counter.
 
+=back
+
 For example, clearing bit #26 at run-time disables high-performance
 SSE2 code present in the crypto library. You might have to do this if
 target OpenSSL application is executed on SSE2 capable CPU, but under
diff -urN a/doc/crypto/OPENSSL_ia32cap.pod.autosave b/doc/crypto/OPENSSL_ia32cap.pod.autosave
--- a/doc/crypto/OPENSSL_ia32cap.pod.autosave	1970-01-01 01:00:00.000000000 +0100
+++ b/doc/crypto/OPENSSL_ia32cap.pod.autosave	2013-06-22 22:33:58.324550366 +0100
@@ -0,0 +1,43 @@
+=pod
+
+=head1 NAME
+
+OPENSSL_ia32cap - finding the IA-32 processor capabilities
+
+=head1 SYNOPSIS
+
+ unsigned long *OPENSSL_ia32cap_loc(void);
+ #define OPENSSL_ia32cap (*(OPENSSL_ia32cap_loc()))
+
+=head1 DESCRIPTION
+
+Value returned by OPENSSL_ia32cap_loc() is address of a variable
+containing IA-32 processor capabilities bit vector as it appears in EDX
+register after executing CPUID instruction with EAX=1 input value (see
+Intel Application Note #241618). Naturally it's meaningful on IA-32[E]
+platforms only. The variable is normally set up automatically upon
+toolkit initialization, but can be manipulated afterwards to modify
+crypto library behaviour. For the moment of this writing six bits are
+significant, namely:
+
+1. bit #28 denoting Hyperthreading, which is used to distiguish
+   cores with shared cache;
+2. bit #26 denoting SSE2 support;
+3. bit #25 denoting SSE support;
+4. bit #23 denoting MMX support;
+5. bit #20, reserved by Intel, is used to choose between RC4 code
+   pathes;
+6. bit #4 denoting presence of Time-Stamp Counter.
+
+For example, clearing bit #26 at run-time disables high-performance
+SSE2 code present in the crypto library. You might have to do this if
+target OpenSSL application is executed on SSE2 capable CPU, but under
+control of OS which does not support SSE2 extentions. Even though you
+can manipulate the value programmatically, you most likely will find it
+more appropriate to set up an environment variable with the same name
+prior starting target application, e.g. on Intel P4 processor 'env
+OPENSSL_ia32cap=0x12900010 apps/openssl', to achieve same effect
+without modifying the application source code. Alternatively you can
+reconfigure the toolkit with no-sse2 option and recompile.
+
+=cut
diff -urN a/doc/crypto/X509_STORE_CTX_get_error.pod b/doc/crypto/X509_STORE_CTX_get_error.pod
--- a/doc/crypto/X509_STORE_CTX_get_error.pod	2013-02-11 15:26:04.000000000 +0000
+++ b/doc/crypto/X509_STORE_CTX_get_error.pod	2013-06-22 23:50:05.077717266 +0100
@@ -278,6 +278,8 @@
 an application specific error. This will never be returned unless explicitly
 set by an application.
 
+=back
+
 =head1 NOTES
 
 The above functions should be used instead of directly referencing the fields
diff -urN a/doc/crypto/rand.pod b/doc/crypto/rand.pod
--- a/doc/crypto/rand.pod	2013-02-11 15:02:48.000000000 +0000
+++ b/doc/crypto/rand.pod	2013-06-22 22:33:58.324550366 +0100
@@ -74,16 +74,16 @@
 
 =over 4
 
-=item 1
+=item Z<>1
 
 A good hashing algorithm to mix things up and to convert the RNG 'state'
 to random numbers.
 
-=item 2
+=item Z<>2
 
 An initial source of random 'state'.
 
-=item 3
+=item Z<>3
 
 The state should be very large.  If the RNG is being used to generate
 4096 bit RSA keys, 2 2048 bit random strings are required (at a minimum).
@@ -93,13 +93,13 @@
 a bad idea to keep quite a lot of RNG state.  It should be easier to
 break a cipher than guess the RNG seed data.
 
-=item 4
+=item Z<>4
 
 Any RNG seed data should influence all subsequent random numbers
 generated.  This implies that any random seed data entered will have
 an influence on all subsequent random numbers generated.
 
-=item 5
+=item Z<>5
 
 When using data to seed the RNG state, the data used should not be
 extractable from the RNG state.  I believe this should be a
@@ -108,12 +108,12 @@
 not be disclosed by either subsequent random numbers or a
 'core' dump left by a program crash.
 
-=item 6
+=item Z<>6
 
 Given the same initial 'state', 2 systems should deviate in their RNG state
 (and hence the random numbers generated) over time if at all possible.
 
-=item 7
+=item Z<>7
 
 Given the random number output stream, it should not be possible to determine
 the RNG state or the next random number.
diff -urN a/doc/ssl/SSL_COMP_add_compression_method.pod b/doc/ssl/SSL_COMP_add_compression_method.pod
--- a/doc/ssl/SSL_COMP_add_compression_method.pod	2013-02-11 15:02:48.000000000 +0000
+++ b/doc/ssl/SSL_COMP_add_compression_method.pod	2013-06-22 22:33:58.344550366 +0100
@@ -53,11 +53,11 @@
 
 =over 4
 
-=item 0
+=item Z<>0
 
 The operation succeeded.
 
-=item 1
+=item Z<>1
 
 The operation failed. Check the error queue to find out the reason.
 
diff -urN a/doc/ssl/SSL_CTX_add_session.pod b/doc/ssl/SSL_CTX_add_session.pod
--- a/doc/ssl/SSL_CTX_add_session.pod	2013-02-11 15:02:48.000000000 +0000
+++ b/doc/ssl/SSL_CTX_add_session.pod	2013-06-22 22:33:58.344550366 +0100
@@ -52,13 +52,13 @@
 
 =over 4
 
-=item 0
+=item Z<>0
 
  The operation failed. In case of the add operation, it was tried to add
  the same (identical) session twice. In case of the remove operation, the
  session was not found in the cache.
 
-=item 1
+=item Z<>1
  
  The operation succeeded.
 
diff -urN a/doc/ssl/SSL_CTX_load_verify_locations.pod b/doc/ssl/SSL_CTX_load_verify_locations.pod
--- a/doc/ssl/SSL_CTX_load_verify_locations.pod	2013-02-11 15:02:48.000000000 +0000
+++ b/doc/ssl/SSL_CTX_load_verify_locations.pod	2013-06-22 22:33:58.344550366 +0100
@@ -100,13 +100,13 @@
 
 =over 4
 
-=item 0
+=item Z<>0
 
 The operation failed because B<CAfile> and B<CApath> are NULL or the
 processing at one of the locations specified failed. Check the error
 stack to find out the reason.
 
-=item 1
+=item Z<>1
 
 The operation succeeded.
 
diff -urN a/doc/ssl/SSL_CTX_set_client_CA_list.pod b/doc/ssl/SSL_CTX_set_client_CA_list.pod
--- a/doc/ssl/SSL_CTX_set_client_CA_list.pod	2013-02-11 15:02:48.000000000 +0000
+++ b/doc/ssl/SSL_CTX_set_client_CA_list.pod	2013-06-22 22:33:58.344550366 +0100
@@ -66,11 +66,11 @@
 
 =over 4
 
-=item 1
+=item Z<>1
 
 The operation succeeded.
 
-=item 0
+=item Z<>0
 
 A failure while manipulating the STACK_OF(X509_NAME) object occurred or
 the X509_NAME could not be extracted from B<cacert>. Check the error stack
diff -urN a/doc/ssl/SSL_CTX_set_session_id_context.pod b/doc/ssl/SSL_CTX_set_session_id_context.pod
--- a/doc/ssl/SSL_CTX_set_session_id_context.pod	2013-02-11 15:02:48.000000000 +0000
+++ b/doc/ssl/SSL_CTX_set_session_id_context.pod	2013-06-22 22:33:58.344550366 +0100
@@ -64,13 +64,13 @@
 
 =over 4
 
-=item 0
+=item Z<>0
 
 The length B<sid_ctx_len> of the session id context B<sid_ctx> exceeded
 the maximum allowed length of B<SSL_MAX_SSL_SESSION_ID_LENGTH>. The error
 is logged to the error stack.
 
-=item 1
+=item Z<>1
 
 The operation succeeded.
 
diff -urN a/doc/ssl/SSL_CTX_set_ssl_version.pod b/doc/ssl/SSL_CTX_set_ssl_version.pod
--- a/doc/ssl/SSL_CTX_set_ssl_version.pod	2013-02-11 15:26:04.000000000 +0000
+++ b/doc/ssl/SSL_CTX_set_ssl_version.pod	2013-06-22 22:33:58.344550366 +0100
@@ -42,11 +42,11 @@
 
 =over 4
 
-=item 0
+=item Z<>0
 
 The new choice failed, check the error stack to find out the reason.
 
-=item 1
+=item Z<>1
 
 The operation succeeded.
 
diff -urN a/doc/ssl/SSL_CTX_use_psk_identity_hint.pod b/doc/ssl/SSL_CTX_use_psk_identity_hint.pod
--- a/doc/ssl/SSL_CTX_use_psk_identity_hint.pod	2013-02-11 15:26:04.000000000 +0000
+++ b/doc/ssl/SSL_CTX_use_psk_identity_hint.pod	2013-06-22 23:49:12.451052518 +0100
@@ -81,6 +81,8 @@
 
 Return values from the server callback are interpreted as follows:
 
+=over 4
+
 =item > 0
 
 PSK identity was found and the server callback has provided the PSK
@@ -94,9 +96,11 @@
 connection will fail with decryption_error before it will be finished
 completely.
 
-=item 0
+=item Z<>0
 
 PSK identity was not found. An "unknown_psk_identity" alert message
 will be sent and the connection setup fails.
 
+=back
+
 =cut
diff -urN a/doc/ssl/SSL_accept.pod b/doc/ssl/SSL_accept.pod
--- a/doc/ssl/SSL_accept.pod	2013-02-11 15:02:48.000000000 +0000
+++ b/doc/ssl/SSL_accept.pod	2013-06-22 22:33:58.347883699 +0100
@@ -44,12 +44,12 @@
 
 =over 4
 
-=item 1
+=item Z<>1
 
 The TLS/SSL handshake was successfully completed, a TLS/SSL connection has been
 established.
 
-=item 0
+=item Z<>0
 
 The TLS/SSL handshake was not successful but was shut down controlled and
 by the specifications of the TLS/SSL protocol. Call SSL_get_error() with the
diff -urN a/doc/ssl/SSL_clear.pod b/doc/ssl/SSL_clear.pod
--- a/doc/ssl/SSL_clear.pod	2013-02-11 15:02:48.000000000 +0000
+++ b/doc/ssl/SSL_clear.pod	2013-06-22 22:33:58.347883699 +0100
@@ -56,12 +56,12 @@
 
 =over 4
 
-=item 0
+=item Z<>0
 
 The SSL_clear() operation could not be performed. Check the error stack to
 find out the reason.
 
-=item 1
+=item Z<>1
 
 The SSL_clear() operation was successful.
 
diff -urN a/doc/ssl/SSL_connect.pod b/doc/ssl/SSL_connect.pod
--- a/doc/ssl/SSL_connect.pod	2013-02-11 15:02:48.000000000 +0000
+++ b/doc/ssl/SSL_connect.pod	2013-06-22 22:33:58.347883699 +0100
@@ -41,12 +41,12 @@
 
 =over 4
 
-=item 1
+=item Z<>1
 
 The TLS/SSL handshake was successfully completed, a TLS/SSL connection has been
 established.
 
-=item 0
+=item Z<>0
 
 The TLS/SSL handshake was not successful but was shut down controlled and
 by the specifications of the TLS/SSL protocol. Call SSL_get_error() with the
diff -urN a/doc/ssl/SSL_do_handshake.pod b/doc/ssl/SSL_do_handshake.pod
--- a/doc/ssl/SSL_do_handshake.pod	2013-02-11 15:02:48.000000000 +0000
+++ b/doc/ssl/SSL_do_handshake.pod	2013-06-22 22:33:58.347883699 +0100
@@ -45,12 +45,12 @@
 
 =over 4
 
-=item 1
+=item Z<>1
 
 The TLS/SSL handshake was successfully completed, a TLS/SSL connection has been
 established.
 
-=item 0
+=item Z<>0
 
 The TLS/SSL handshake was not successful but was shut down controlled and
 by the specifications of the TLS/SSL protocol. Call SSL_get_error() with the
diff -urN a/doc/ssl/SSL_read.pod b/doc/ssl/SSL_read.pod
--- a/doc/ssl/SSL_read.pod	2013-02-11 15:02:48.000000000 +0000
+++ b/doc/ssl/SSL_read.pod	2013-06-22 22:33:58.347883699 +0100
@@ -86,7 +86,7 @@
 The read operation was successful; the return value is the number of
 bytes actually read from the TLS/SSL connection.
 
-=item 0
+=item Z<>0
 
 The read operation was not successful. The reason may either be a clean
 shutdown due to a "close notify" alert sent by the peer (in which case
diff -urN a/doc/ssl/SSL_session_reused.pod b/doc/ssl/SSL_session_reused.pod
--- a/doc/ssl/SSL_session_reused.pod	2013-02-11 15:02:48.000000000 +0000
+++ b/doc/ssl/SSL_session_reused.pod	2013-06-22 22:33:58.347883699 +0100
@@ -27,11 +27,11 @@
 
 =over 4
 
-=item 0
+=item Z<>0
 
 A new session was negotiated.
 
-=item 1
+=item Z<>1
 
 A session was reused.
 
diff -urN a/doc/ssl/SSL_set_fd.pod b/doc/ssl/SSL_set_fd.pod
--- a/doc/ssl/SSL_set_fd.pod	2013-02-11 15:02:48.000000000 +0000
+++ b/doc/ssl/SSL_set_fd.pod	2013-06-22 22:33:58.347883699 +0100
@@ -35,11 +35,11 @@
 
 =over 4
 
-=item 0
+=item Z<>0
 
 The operation failed. Check the error stack to find out why.
 
-=item 1
+=item Z<>1
 
 The operation succeeded.
 
diff -urN a/doc/ssl/SSL_set_session.pod b/doc/ssl/SSL_set_session.pod
--- a/doc/ssl/SSL_set_session.pod	2013-02-11 15:02:48.000000000 +0000
+++ b/doc/ssl/SSL_set_session.pod	2013-06-22 22:33:58.354550366 +0100
@@ -37,11 +37,11 @@
 
 =over 4
 
-=item 0
+=item Z<>0
 
 The operation failed; check the error stack to find out the reason.
 
-=item 1
+=item Z<>1
 
 The operation succeeded.
 
diff -urN a/doc/ssl/SSL_set_shutdown.pod b/doc/ssl/SSL_set_shutdown.pod
--- a/doc/ssl/SSL_set_shutdown.pod	2013-02-11 15:02:48.000000000 +0000
+++ b/doc/ssl/SSL_set_shutdown.pod	2013-06-22 22:33:58.354550366 +0100
@@ -24,7 +24,7 @@
 
 =over 4
 
-=item 0
+=item Z<>0
 
 No shutdown setting, yet.
 
diff -urN a/doc/ssl/SSL_shutdown.pod b/doc/ssl/SSL_shutdown.pod
--- a/doc/ssl/SSL_shutdown.pod	2013-02-11 15:02:48.000000000 +0000
+++ b/doc/ssl/SSL_shutdown.pod	2013-06-22 22:33:58.354550366 +0100
@@ -92,19 +92,19 @@
 
 =over 4
 
-=item 1
+=item Z<>1
 
 The shutdown was successfully completed. The "close notify" alert was sent
 and the peer's "close notify" alert was received.
 
-=item 0
+=item Z<>0
 
 The shutdown is not yet finished. Call SSL_shutdown() for a second time,
 if a bidirectional shutdown shall be performed.
 The output of L<SSL_get_error(3)|SSL_get_error(3)> may be misleading, as an
 erroneous SSL_ERROR_SYSCALL may be flagged even though no error occurred.
 
-=item -1
+=item Z<>-1
 
 The shutdown was not successful because a fatal error occurred either
 at the protocol level or a connection failure occurred. It can also occur if
diff -urN a/doc/ssl/SSL_write.pod b/doc/ssl/SSL_write.pod
--- a/doc/ssl/SSL_write.pod	2013-02-11 15:02:48.000000000 +0000
+++ b/doc/ssl/SSL_write.pod	2013-06-22 22:33:58.354550366 +0100
@@ -79,7 +79,7 @@
 The write operation was successful, the return value is the number of
 bytes actually written to the TLS/SSL connection.
 
-=item 0
+=item Z<>0
 
 The write operation was not successful. Probably the underlying connection
 was closed. Call SSL_get_error() with the return value B<ret> to find out,
